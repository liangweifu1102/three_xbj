[log]
# 配置日志处理器: console,file...
# 可自由组合, 以","分隔
processor=""

# 日志缓存区大小，单位kB，范围512～2048
buffer-size = 512

# 配置日志输出目录
# 默认为/mnt/usb1根目录
path=
		
# 控制台日志处理器参数配置
[console]
# 展示日志的级别: debug,information,warning,error,critical
#支持all, all特指所有级别
# 可自由组合，以","分隔
level="all"
		
# 展示日志的类型: running,operation,maintenance,security,interface
# 支持all, all特指所有类型
type="all"

# 展示日志的模块：project,rtdb,script,device,communication,stgy,history,gui,backup,mcgs_app,animation,recipe,system
# 支持all, all特指所有模块
module=all

#单条日志信息最大长度，范围128~1024
max-length=512

# 是否展示应用程序名称。值为: true/false
show-app-name=true
		
# 是否展示日志类型。值为: true/false
show-type=true
		
# 是否展示日志级别。值为: true/false
show-level=true
		
# 是否展示函数名称。值为: true/false
show-function=true
		
# 是否展示文件名称、行号。值为: true/false
show-file-line=true
		
# 是否展示日志标签。值为: true/false
show-tag=true

# 文件日志处理器的参数配置
[file]
# 存储日志的级别: debug,information,warning,error,critical
# 支持all, all特指所有级别
# 可自由组合, 以","分隔
level=all
		
# 展示日志的类型: running,operation,maintenance,security,interface
# 支持all, all特指所有类型
type=all

# 展示日志的模块：project,rtdb,script,device,communication,stgy,history,gui,backup,mcgs_app,animation,recipe,system
# 支持all, all特指所有模块
module=all

#单条日志信息最大长度，范围128~1024
max-length=512

#写文件缓存大小，单位KB，范围10~10240
cache-size=128

# 是否展示应用程序名称。值为: true/false
show-app-name=true

# 是否展示日志类型。值为: true/false
show-type=true

# 是否展示日志级别。值为: true/false
show-level=true

# 是否展示函数名称。值为: true/false
show-function=true

# 是否展示文件名称、行号。值为: true/false
show-file-line=true

# 是否展示日志标签。值为: true/false
show-tag=true

# 单个日志文件大小, 单位 M，范围0~10M
log-file-size=1
[watchdog]
# 看门狗功能开启的开关。 如果为0，看门狗功能关闭，监控线程不会被创建;如果为1，看门狗功能开启，监控线程会被创建
switch=1

# 默认超时时间，如果为0,看门狗采用各注册对象各自的超时时间，否则采用该默认时间
default-timeout=0

# 看门狗策略，如果为0，线程超时时只记录日志，不杀死进程；为1时记录日志并杀死进程（杀死进程的功能仅在ARM平台生效）
strategy=1

[monitor]
# 系统监控功能开启的开关。 如果为0，系统监控功能关闭;如果为1，系统监控功能开启
switch=1

[memory]
# 内存报警阈值, 单位MB，当系统剩余可用内存低于该值时，将产生报警记录，取值范围0~100
fault_threshold=10

# 内存恢复阈值，当系统剩余可用内存高于总物理内存*该比例值时，报警恢复，取值范围0~100
resume_threshold=50

# 报警恢复时长，当报警恢复并持续该单位时间后，认为系统内存稳定，单位 min
restore=5

#监控点分配个数，范围1～1000
points=100

#累计触发时长，单位为秒,范围1～3600,指标发生累积时长超过该值时被监控点记录
acc_time=30

#累计触发次数，范围1～1000,指标在单位时间发生次数超过该值时被监控点记录
trig_count=10

#次数触发的单位时间，单位为秒，范围1～3600,指标在该时间内发生次数超过阈值时被监控点记录
trig_time=60
# cpu每一个核心均以此指标作为报警条件
[cpu]
# CPU报警阈值, 当CPU高于该比例值时，将产生报警记录，取值范围0~100
fault_threshold=90

# CPU恢复阈值，当CPU低于该比例值时，报警恢复，取值范围0~100
resume_threshold=50

# 报警恢复时长，当报警恢复并持续该单位时间后，认为系统CPU稳定，单位 min
restore=1

#监控点分配个数，范围1～1000
points=100

#累计触发时长，单位为秒,围1～3600,指标发生累积时长超过该值时被监控点记录
acc_time=30

#累计触发次数，范围1～1000,指标在单位时间发生次数超过该值时被监控点记录
trig_count=10

#次数触发的单位时间，单位为秒，范围1～3600,指标在该时间内发生次数超过阈值时被监控点记录
trig_time=60
[disk]
#磁盘监控目录，若此项未配置，则整个磁盘作为监控目标
disk_scope="/storage"

# 磁盘报警阈值, 单位MB，当剩余磁盘空间低于该值时，将产生报警记录，取值范围0~1024
fault_threshold=5

# 磁盘恢复阈值，当磁盘占用率低于该比例值时，报警恢复，取值范围0~100
resume_threshold=50

# 磁盘恢复时长，当报警恢复并持续该单位时间后，认为系统磁盘稳定，单位 min
restore=20

#监控点分配个数，范围1～1000
points=100

#累计触发时长，单位为秒,范围1～3600,指标发生累积时长超过该值时被监控点记录
acc_time=2

#累计触发次数，范围1～1000,指标在单位时间发生次数超过该值时被监控点记录
trig_count=6

#次数触发的单位时间，单位为秒，范围1～3600,指标在该时间内发生次数超过阈值时被监控点记录
trig_time=60

#磁盘读速率阈值，单位KB每秒，范围0～10240,0表示不监控该速率
read_threshold=0
#磁盘写速率阈值，单位KB每秒，范围0～10240,0表示不监控该速率
write_threshold=200
